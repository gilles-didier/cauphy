% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitCauchy.R
\name{fitCauchy}
\alias{fitCauchy}
\title{Maximum Likelihood estimator for a Cauchy model}
\usage{
fitCauchy(
  phy,
  trait,
  model = c("cauchy", "lambda"),
  method = c("reml", "random.root", "fixed.root"),
  starting.value = list(mu = NULL, disp = NULL, lambda = NULL),
  lower.bound = list(disp = 0, lambda = 0),
  upper.bound = list(disp = Inf, lambda = NULL),
  root.edge = 100,
  hessian = FALSE,
  optim = c("local", "global"),
  method.init.disp = c("Qn", "Sn", "MAD", "IQR")
)
}
\arguments{
\item{phy}{a phylogenetic tree of class \code{\link[ape]{phylo}}.}

\item{trait}{named vector of traits at the tips.}

\item{model}{a model for the trait evolution. Only \code{"cauchy"} is allowed.}

\item{method}{the method used to fit the process. One of \code{reml} (the default), \code{random.root} or \code{fixed.root}.
See details.}

\item{starting.value}{starting value for the parameters of the Cauchy.
This should be a named list, with \code{mu} and \code{disp} the ancestral central and dispersion parameters.
The default initial values are computed from standard statistics used on (independent) Cauchy variables, see details.}

\item{lower.bound}{named list with lower bound values for the parameters.}

\item{upper.bound}{named list with upper bound values for the parameters. See Details.}

\item{root.edge}{multiplicative factor for the root dispersion, equal to the length of the root edge. Ignored if \code{method!=random.root}.}

\item{hessian}{if \code{TRUE}, then the numerical hessian is computed, for confidence interval computations. See \code{\link{compute_vcov}}.}

\item{optim}{if "local", only a local optimization around the initial parameter values is performed (the default). If "global", a global maximization is attempted using the "MLSL" approach (see \code{\link{nloptr}}).}

\item{method.init.disp}{the initialization method for the dispersion. One of "Qn", "Sn", "MAD", "IQR". Default to the "Qn" statistics. See Details.}
}
\value{
A list, with the maximum likelihood rate parameter, and the likelihood value.
}
\description{
Find the maximum likelihood, using numerical optimization with \code{\link{optim}}.
}
\details{
Unless specified by the user, the initial values for the parameters are taken according to the following heuristics:
\itemize{
 \item{\code{mu}}{ is the trimmed mean of the trait, keeping only 24\% of the observations, as advocated in Rothenberg et al. 1964 (for \code{method="fixed.root"})}
 \item{\code{disp}}{ is initialized from the trait centered and normalized by tip heights, with one of the following statistics, taken from Rousseeuw & Croux 1993:}
 \itemize{
 \item{\code{IQR}}{ half of the inter-quartile range (see \code{\link{IQR}});}
 \item{\code{MAD}}{ median absolute deviation with constant equal to 1 (see \code{\link{mad}});}
 \item{\code{Sn}}{ Sn statistics with constant 0.7071 (see \code{\link[robustbase]{Sn}});}
 \item{\code{Qn}}{ Qn statistics with constant 1.2071 (see \code{\link[robustbase]{Qn}});}
}
}

For \code{model=lambda}, the maximum default value is computed using \code{phytools:::maxLambda},
and is the ratio between the maximum height of a tip node over the maximum height of an internal node.
This can be larger than 1.

The \code{method} argument specifies the method used for the fit:
\itemize{
  \item{\code{method=reml}}{ 
  the dispersion parameter is fitted using the REML criterion,
  obtained by re-rooting the tree to one of the tips. 
  }
  \item{\code{method=random.root}}{ 
  the root value is assumed to be a random Cauchy variable, centered at \code{mu=0},
  and with a dispersion \code{disp_root = disp * root.edge}.
  }
  \item{\code{method=fixed.root}}{ 
  the model is fitted conditionally on the root value mu,
  i.e. with a model where the root value is fixed and inferred from the data.
  }
}
In the first two cases, the optimization is done on the dispersion only,
while in the last case the optimization is on the root value and the dispersion.
}
\examples{
# Simulate tree and data
phy <- ape::rphylo(5, 0.1, 0)
dat <- rTraitCauchy(n = 1, phy = phy, model = "cauchy", parameters = list(root.value = 0, disp = 1))
# Fit the data
fit <- fitCauchy(phy, dat, model = "cauchy", method = "reml")
fit

}
\references{
Rothenberg T. J., Fisher F. M., Tilanus C. B. 1964. A Note on Estimation from a Cauchy Sample. Journal of the American Statistical Association. 59:460–463.
Rousseeuw P.J., Croux C. 1993. Alternatives to the Median Absolute Deviation. Journal of the American Statistical Association. 88:1273–1283.
}
\seealso{
\code{\link{cauphylm}}, \code{geiger::fitContinuous}
}
